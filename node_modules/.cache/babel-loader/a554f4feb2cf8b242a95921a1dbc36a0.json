{"ast":null,"code":"import _classCallCheck from \"/home/sm1ley/Desktop/react-colors/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sm1ley/Desktop/react-colors/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sm1ley/Desktop/react-colors/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sm1ley/Desktop/react-colors/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sm1ley/Desktop/react-colors/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/sm1ley/Desktop/react-colors/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/sm1ley/Desktop/react-colors/src/Navbar.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/styles\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slider from \"rc-slider\";\nimport \"rc-slider/assets/index.css\";\nimport styles from \"./styles/NavbarStyles\";\n\nvar Navbar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Navbar, _Component);\n\n  function Navbar(props) {\n    var _this;\n\n    _classCallCheck(this, Navbar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Navbar).call(this, props));\n    _this.state = {\n      format: \"hex\",\n      open: false\n    };\n    _this.handleFormatChange = _this.handleFormatChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.closeSnackbar = _this.closeSnackbar.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Navbar, [{\n    key: \"handleFormatChange\",\n    value: function handleFormatChange(e) {\n      this.setState({\n        format: e.target.value,\n        open: true\n      });\n      this.props.handleChange(e.target.value);\n    }\n  }, {\n    key: \"closeSnackbar\",\n    value: function closeSnackbar() {\n      this.setState({\n        open: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          level = _this$props.level,\n          changeLevel = _this$props.changeLevel,\n          showingAllColors = _this$props.showingAllColors,\n          classes = _this$props.classes;\n      var format = this.state.format;\n      return React.createElement(\"header\", {\n        className: classes.Navbar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.logo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"reactcolorpicker\")), showingAllColors && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Level: \", level), React.createElement(\"div\", {\n        className: classes.slider,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Slider, {\n        defaultValue: level,\n        min: 100,\n        max: 900,\n        step: 100,\n        onAfterChange: changeLevel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: classes.selectContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Select, {\n        value: format,\n        onChange: this.handleFormatChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: \"hex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"HEX - #ffffff\"), React.createElement(MenuItem, {\n        value: \"rgb\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"RGB - rgb(255,255,255)\"), React.createElement(MenuItem, {\n        value: \"rgba\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"RGBA - rgba(255,255,255, 1.0)\"))), React.createElement(Snackbar, {\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        },\n        open: this.state.open,\n        autoHideDuration: 3000,\n        message: React.createElement(\"span\", {\n          id: \"message-id\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"Format Changed To \", format.toUpperCase()),\n        ContentProps: {\n          \"aria-describedby\": \"message-id\"\n        },\n        onClose: this.closeSnackbar,\n        action: [React.createElement(IconButton, {\n          onClick: this.closeSnackbar,\n          color: \"inherit\",\n          key: \"close\",\n          \"aria-label\": \"close\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(CloseIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }))],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Navbar;\n}(Component);\n\nexport default withStyles(styles)(Navbar);","map":{"version":3,"sources":["/home/sm1ley/Desktop/react-colors/src/Navbar.js"],"names":["React","Component","Link","withStyles","Select","MenuItem","Snackbar","IconButton","CloseIcon","Slider","styles","Navbar","props","state","format","open","handleFormatChange","bind","closeSnackbar","e","setState","target","value","handleChange","level","changeLevel","showingAllColors","classes","logo","slider","selectContainer","vertical","horizontal","toUpperCase"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/styles\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slider from \"rc-slider\";\nimport \"rc-slider/assets/index.css\";\nimport styles from \"./styles/NavbarStyles\";\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { format: \"hex\", open: false };\n    this.handleFormatChange = this.handleFormatChange.bind(this);\n    this.closeSnackbar = this.closeSnackbar.bind(this);\n  }\n  handleFormatChange(e) {\n    this.setState({ format: e.target.value, open: true });\n    this.props.handleChange(e.target.value);\n  }\n  closeSnackbar() {\n    this.setState({ open: false });\n  }\n  render() {\n    const { level, changeLevel, showingAllColors, classes } = this.props;\n    const { format } = this.state;\n    return (\n      <header className={classes.Navbar}>\n        <div className={classes.logo}>\n          <Link to='/'>reactcolorpicker</Link>\n        </div>\n        {showingAllColors && (\n          <div>\n            <span>Level: {level}</span>\n            <div className={classes.slider}>\n              <Slider\n                defaultValue={level}\n                min={100}\n                max={900}\n                step={100}\n                onAfterChange={changeLevel}\n              />\n            </div>\n          </div>\n        )}\n        <div className={classes.selectContainer}>\n          <Select value={format} onChange={this.handleFormatChange}>\n            <MenuItem value='hex'>HEX - #ffffff</MenuItem>\n            <MenuItem value='rgb'>RGB - rgb(255,255,255)</MenuItem>\n            <MenuItem value='rgba'>RGBA - rgba(255,255,255, 1.0)</MenuItem>\n          </Select>\n        </div>\n        <Snackbar\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n          open={this.state.open}\n          autoHideDuration={3000}\n          message={\n            <span id='message-id'>\n              Format Changed To {format.toUpperCase()}\n            </span>\n          }\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          onClose={this.closeSnackbar}\n          action={[\n            <IconButton\n              onClick={this.closeSnackbar}\n              color='inherit'\n              key='close'\n              aria-label='close'\n            >\n              <CloseIcon />\n            </IconButton>\n          ]}\n        />\n      </header>\n    );\n  }\n}\nexport default withStyles(styles)(Navbar);\n"]},"metadata":{},"sourceType":"module"}